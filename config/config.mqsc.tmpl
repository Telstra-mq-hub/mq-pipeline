STOP LISTENER('SYSTEM.DEFAULT.LISTENER.TCP')

* Developer queues
DEFINE QLOCAL('DEV.QUEUE.1') DEFPSIST(YES)  REPLACE
DEFINE QLOCAL('DEV.QUEUE.2') DEFPSIST(YES) REPLACE
DEFINE QLOCAL('DEV.QUEUE.3') DEFPSIST(YES) REPLACE
DEFINE QLOCAL('DEV.DEAD.LETTER.QUEUE') REPLACE

* Use a different dead letter queue, for undeliverable messages
ALTER QMGR DEADQ('DEV.DEAD.LETTER.QUEUE')

* Developer topics
DEFINE TOPIC('DEV.BASE.TOPIC') TOPICSTR('dev/') REPLACE

* Disable connection authentication
ALTER QMGR CONNAUTH('')

* Developer two channels - one for SSL for external, one for NOSSL for internal
* DEFINE CHANNEL(NOTLS.SVRCONN) CHLTYPE(SVRCONN) MCAUSER('app') REPLACE
* DEFINE CHANNEL(${channel}) CHLTYPE(SVRCONN) MCAUSER('app') REPLACE
DEFINE CHANNEL(NOTLS.SVRCONN) CHLTYPE(SVRCONN) MCAUSER('app') 
DEFINE CHANNEL(${channel}) CHLTYPE(SVRCONN) MCAUSER('app') TRPTYPE(TCP) SSLCAUTH(OPTIONAL) SSLCIPH('ANY_TLS12_OR_HIGHER')
ALTER CHANNEL(${channel}) CHLTYPE(SVRCONN) SSLCAUTH(OPTIONAL) SSLCIPH(ANY_TLS12_OR_HIGHER) CERTLABL('${cert_name}')

* Developer channel authentication rules
* SET CHLAUTH(NOTLS.SVRCONN) TYPE(BLOCKUSER) USERLIST(NOBODY) DESCR('Allows anybody on this channel') ACTION(REPLACE)
* SET CHLAUTH(${channel}) TYPE(BLOCKUSER) USERLIST(NOBODY) DESCR('Allows anybody on this channel') ACTION(REPLACE)
SET CHLAUTH(NOTLS.SVRCONN) TYPE(BLOCKUSER) USERLIST(NOBODY) DESCR('Allows anybody on this channel') ACTION(ADD)
SET CHLAUTH(${channel}) TYPE(BLOCKUSER) USERLIST(NOBODY) DESCR('Allows anybody on this channel') ACTION(ADD)

REFRESH SECURITY TYPE(CONNAUTH)
REFRESH SECURITY TYPE(SSL)

* Developer TLS
ALTER QMGR CERTLABL('${cert_name}')

* Developer listener
STOP LISTENER('SYSTEM.LISTENER.TCP.1')
DELETE LISTENER('SYSTEM.LISTENER.TCP.1')
DEFINE LISTENER('DEV.LISTENER.TCP') TRPTYPE(TCP) PORT(1414) CONTROL(QMGR) REPLACE
START LISTENER('DEV.LISTENER.TCP')